{
  "defaultSeverity": "warn",
  "extends": [ "tslint:all" ],
  "rules": {
    // Specific settings for Nuxt.js
    "no-consecutive-blank-lines": false,                                                          // Nuxt.js generated JavaScript file contains multiple blank lines.
    "no-default-export": false,                                                                   // In-page script requires default export.

    // Lint rule of the project
    "binary-expression-operand-order": false,                                                     // To prioritize readability by inequality ordering (and symbol of inequalities prefer "<" to ">")
    "file-name-casing": [ true, "kebab-case" ],                                                   // To prevent capitalization problem between Windows and Linux.
    "interface-name": [ true, "never-prefix" ],                                                   // Do not include markers not meaningful in naming.
    "object-literal-sort-keys": false,                                                            // Order priorities to semantics from alphabetical. (e.g. prefer "id, name, email" to "email, id, name")
    "max-classes-per-file": false,                                                                // To grouping of meaningful classes. (e.g. grouping similar models or models attached to related class)
    "max-line-length": [ true, { "limit": 140, "ignore-pattern": "^import|logger\\." }],          // Allow longer for type declaration and non-critical code is unlimited.
    "member-ordering": [ true, { "order": [ "static-field", "instance-field", "constructor" ]}],  // To keep readability by declaring lower importance(like private function) at low position in file.
    "newline-before-return": false,                                                               // To keep readability of small methods like 2 or 3 lines.
    "newline-per-chained-call": false,                                                            // Simple case method chains can also prevent complexity. (e.g. `then()` of returning a promise)
    "no-consecutive-blank-lines": [ true, 2 ],                                                    // Accept multiple line breaks to make code block meaningful.
    "no-console": [ true, "log" ],                                                                // For properly use the appropriate log method
    "no-implicit-dependencies": [ true, [ "~", "aws-lambda", "aws-sdk" ]],                        // Allow path aliases of owning source and modules provided in the execution environment.
    "no-inferrable-types": false,                                                                 // To prioritize explicit typing
    "no-magic-numbers": false,                                                                    // Enable to handle numerical values directly like HTTP status code.
    "no-parameter-properties": false,                                                             // To eliminate redundant coding.
    "no-submodule-imports": [ true, "~", "firebase" ],                                            // Allow path aliases of owning source.
    "no-unnecessary-class": [ true, "allow-static-only" ],                                        // Allow static classes to prefer class type definition from function expressions.
    "no-unused-variable": false,                                                                  // Deprecated, Since TypeScript 2.9. Please use the built-in compiler checks instead.
    "no-use-before-declare": false,                                                               // To keep readability by declaring lower importance(like private function) at low position in file.
    "no-void-expression": false,                                                                  // To take advantage of JavaScript's flexibility.
    "prefer-function-over-method": [ true, "allow-protected" ],                                   // To assume a case where methods are overridden by inheritance.
    "strict-boolean-expressions": false,                                                          // To take advantage of JavaScript's flexibility.
    "trailing-comma": [ true, { "multiline": "never", "singleline": "never" }],                   // To fit in JSON syntax.
    "variable-name": [ true, "check-format", "allow-leading-underscore", "ban-keywords" ],        // For get accessor use case.

    // By the coding style of project
    "quotemark": [ true, "single", "avoid-template", "avoid-escape" ],
    "completed-docs": [ true, {
      "classes": { "visibilities": [ "exported" ]},
      "enums": { "visibilities": [ "exported" ]},
      "functions": { "visibilities": [ "exported" ]},
      "interfaces": { "visibilities": [ "exported" ]},
      "methods": { "privacies": [ "protected", "public" ]},
      "namespaces": { "visibilities": [ "exported" ]},
      "properties": { "privacies": [ "protected", "public" ]},
      "types": { "visibilities": [ "exported" ]},
      "variables": { "visibilities": [ "exported" ]},
      "tags": { "content": { "see": ".*" }, "exists": [ "inheritDoc" ]}
    }],
    "typedef": [
      true,
      "call-signature",
      "arrow-call-signature",
      "parameter",
      "arrow-parameter",
      "property-declaration",
      "member-variable-declaration",
      "object-destructuring",
      "array-destructuring"
      // Remove "variable-declaration", coding reduction is prioritized over type clarification of local variables with narrowed scope
    ]
  }
}
